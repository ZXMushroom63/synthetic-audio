(()=>{var T=class{constructor(e,t={}){this.input=e,this.ip=t.index||0,this.length=t.length||e.length-this.ip,this.chunkList=[],this.offset=this.ip,this.padding=t.padding!==void 0?t.padding:!0,this.bigEndian=t.bigEndian!==void 0?t.bigEndian:!1}parse(){let e=this.length+this.offset;for(this.chunkList=[];this.ip<e;)this.parseChunk()}parseChunk(){let e=this.input,t=this.ip,n;this.chunkList.push(new R(String.fromCharCode(e[t++],e[t++],e[t++],e[t++]),n=this.bigEndian?(e[t++]<<24|e[t++]<<16|e[t++]<<8|e[t++])>>>0:(e[t++]|e[t++]<<8|e[t++]<<16|e[t++]<<24)>>>0,t)),t+=n,this.padding&&(t-this.offset&1)===1&&t++,this.ip=t}getChunk(e){let t=this.chunkList[e];return t===void 0?null:t}getNumberOfChunks(){return this.chunkList.length}},R=class{constructor(e,t,n){this.type=e,this.size=t,this.offset=n}};var E=class{constructor(e,t={}){this.input=e,this.parserOption=t.parserOption||{},this.sampleRate=t.sampleRate||22050,this.presetHeader=[],this.presetZone=[],this.presetZoneModulator=[],this.presetZoneGenerator=[],this.instrument=[],this.instrumentZone=[],this.instrumentZoneModulator=[],this.instrumentZoneGenerator=[],this.sampleHeader=[],this.GeneratorEnumeratorTable=["startAddrsOffset","endAddrsOffset","startloopAddrsOffset","endloopAddrsOffset","startAddrsCoarseOffset","modLfoToPitch","vibLfoToPitch","modEnvToPitch","initialFilterFc","initialFilterQ","modLfoToFilterFc","modEnvToFilterFc","endAddrsCoarseOffset","modLfoToVolume",,"chorusEffectsSend","reverbEffectsSend","pan",,,,"delayModLFO","freqModLFO","delayVibLFO","freqVibLFO","delayModEnv","attackModEnv","holdModEnv","decayModEnv","sustainModEnv","releaseModEnv","keynumToModEnvHold","keynumToModEnvDecay","delayVolEnv","attackVolEnv","holdVolEnv","decayVolEnv","sustainVolEnv","releaseVolEnv","keynumToVolEnvHold","keynumToVolEnvDecay","instrument",,"keyRange","velRange","startloopAddrsCoarseOffset","keynum","velocity","initialAttenuation",,"endloopAddrsCoarseOffset","coarseTune","fineTune","sampleID","sampleModes",,"scaleTuning","exclusiveClass","overridingRootKey","endOper"]}parse(){let e=new T(this.input,this.parserOption);if(e.parse(),e.chunkList.length!==1)throw new Error("wrong chunk length");let t=e.getChunk(0);if(t===null)throw new Error("chunk not found");this.parseRiffChunk(t),this.input=null}parseRiffChunk(e){let t=this.input,n=e.offset;if(e.type!=="RIFF")throw new Error("invalid chunk type:"+e.type);let s=String.fromCharCode(t[n++],t[n++],t[n++],t[n++]);if(s!=="sfbk")throw new Error("invalid signature:"+s);let i=new T(t,{index:n,length:e.size-4});if(i.parse(),i.getNumberOfChunks()!==3)throw new Error("invalid sfbk structure");this.parseInfoList(i.getChunk(0)),this.parseSdtaList(i.getChunk(1)),this.parsePdtaList(i.getChunk(2))}parseInfoList(e){let t=this.input,n=e.offset;if(e.type!=="LIST")throw new Error("invalid chunk type:"+e.type);let s=String.fromCharCode(t[n++],t[n++],t[n++],t[n++]);if(s!=="INFO")throw new Error("invalid signature:"+s);new T(t,{index:n,length:e.size-4}).parse()}parseSdtaList(e){let t=this.input,n=e.offset;if(e.type!=="LIST")throw new Error("invalid chunk type:"+e.type);let s=String.fromCharCode(t[n++],t[n++],t[n++],t[n++]);if(s!=="sdta")throw new Error("invalid signature:"+s);let i=new T(t,{index:n,length:e.size-4});if(i.parse(),i.chunkList.length===0)throw new Error("sdta chunk has no samples");let a=i.getChunk(0),o=i.chunkList.reduce((r,l)=>r+l.size,0);this.samplingData={type:a.type,size:o,offset:a.offset}}parsePdtaList(e){let t=this.input,n=e.offset;if(e.type!=="LIST")throw new Error("invalid chunk type:"+e.type);let s=String.fromCharCode(t[n++],t[n++],t[n++],t[n++]);if(s!=="pdta")throw new Error("invalid signature:"+s);let i=new T(t,{index:n,length:e.size-4});if(i.parse(),i.getNumberOfChunks()!==9)throw new Error("invalid pdta chunk");this.parsePhdr(i.getChunk(0)),this.parsePbag(i.getChunk(1)),this.parsePmod(i.getChunk(2)),this.parsePgen(i.getChunk(3)),this.parseInst(i.getChunk(4)),this.parseIbag(i.getChunk(5)),this.parseImod(i.getChunk(6)),this.parseIgen(i.getChunk(7)),this.parseShdr(i.getChunk(8))}parsePhdr(e){let t=this.input,n=e.offset;this.presetHeader=[];let{presetHeader:s}=this,i=e.offset+e.size;if(e.type!=="phdr")throw new Error("invalid chunk type:"+e.type);for(;n<i;)s.push({presetName:String.fromCharCode.apply(null,t.subarray(n,n+=20)),preset:t[n++]|t[n++]<<8,bank:t[n++]|t[n++]<<8,presetBagIndex:t[n++]|t[n++]<<8,library:(t[n++]|t[n++]<<8|t[n++]<<16|t[n++]<<24)>>>0,genre:(t[n++]|t[n++]<<8|t[n++]<<16|t[n++]<<24)>>>0,morphology:(t[n++]|t[n++]<<8|t[n++]<<16|t[n++]<<24)>>>0})}parsePbag(e){let t=this.input,n=e.offset;this.presetZone=[];let{presetZone:s}=this,i=e.offset+e.size;if(e.type!=="pbag")throw new Error("invalid chunk type:"+e.type);for(;n<i;)s.push({presetGeneratorIndex:t[n++]|t[n++]<<8,presetModulatorIndex:t[n++]|t[n++]<<8})}parsePmod(e){if(e.type!=="pmod")throw new Error("invalid chunk type:"+e.type);this.presetZoneModulator=this.parseModulator(e)}parsePgen(e){if(e.type!=="pgen")throw new Error("invalid chunk type:"+e.type);this.presetZoneGenerator=this.parseGenerator(e)}parseInst(e){let t=this.input,n=e.offset;this.instrument=[];let{instrument:s}=this,i=e.offset+e.size;if(e.type!=="inst")throw new Error("invalid chunk type:"+e.type);for(;n<i;)s.push({instrumentName:String.fromCharCode.apply(null,t.subarray(n,n+=20)),instrumentBagIndex:t[n++]|t[n++]<<8})}parseIbag(e){let t=this.input,n=e.offset;this.instrumentZone=[];let{instrumentZone:s}=this,i=e.offset+e.size;if(e.type!=="ibag")throw new Error("invalid chunk type:"+e.type);for(;n<i;)s.push({instrumentGeneratorIndex:t[n++]|t[n++]<<8,instrumentModulatorIndex:t[n++]|t[n++]<<8})}parseImod(e){if(e.type!=="imod")throw new Error("invalid chunk type:"+e.type);this.instrumentZoneModulator=this.parseModulator(e)}parseIgen(e){if(e.type!=="igen")throw new Error("invalid chunk type:"+e.type);this.instrumentZoneGenerator=this.parseGenerator(e,!0)}parseShdr(e){let t=this.input,n=e.offset;this.sample=[];let{sample:s}=this;this.sampleHeader=[];let{sampleHeader:i}=this,a=e.offset+e.size,o,r,l,h,u,c,y,b,f,p;if(e.type!=="shdr")throw new Error("invalid chunk type:"+e.type);for(;n<a;){o=String.fromCharCode.apply(null,t.subarray(n,n+=20)),r=(t[n++]<<0|t[n++]<<8|t[n++]<<16|t[n++]<<24)>>>0,l=(t[n++]<<0|t[n++]<<8|t[n++]<<16|t[n++]<<24)>>>0,h=(t[n++]<<0|t[n++]<<8|t[n++]<<16|t[n++]<<24)>>>0,u=(t[n++]<<0|t[n++]<<8|t[n++]<<16|t[n++]<<24)>>>0,c=(t[n++]<<0|t[n++]<<8|t[n++]<<16|t[n++]<<24)>>>0,y=t[n++],b=t[n++]<<24>>24,f=t[n++]|t[n++]<<8,p=t[n++]|t[n++]<<8;let d=new Int16Array(new Uint8Array(t.subarray(this.samplingData.offset+r*2,this.samplingData.offset+l*2)).buffer);if(h-=r,u-=r,c>0){let A=this.adjustSampleData(d,c);d=A.sample,c*=A.multiply,h*=A.multiply,u*=A.multiply}s.push(d),i.push({sampleName:o,start:r,end:l,startLoop:h,endLoop:u,sampleRate:c,originalPitch:y,pitchCorrection:b,sampleLink:f,sampleType:p})}}adjustSampleData(e,t){if(this.sampleRate<=t)return{sample:e,multiply:1};let n=this.sampleRate/t,i=2**Math.ceil(Math.log2(n)),a=e.length*i,o=new Int16Array(a),r=e.length;for(let l=0;l<r;++l)o.fill(e[l],l*i,(l+1)*i);return{sample:o,multiply:i}}parseModulator(e){let t=this.input,n=e.offset,s=e.offset+e.size,i,a,o=[];for(;n<s;){if(n+=2,i=t[n++]|t[n++]<<8,a=this.GeneratorEnumeratorTable[i],a===void 0)o.push({type:a,value:{code:i,amount:t[n]|t[n+1]<<8<<16>>16,lo:t[n++],hi:t[n++]}});else switch(a){case"keyRange":case"velRange":case"keynum":case"velocity":o.push({type:a,value:{lo:t[n++],hi:t[n++]}});break;default:o.push({type:a,value:{amount:t[n++]|t[n++]<<8<<16>>16}});break}n+=2,n+=2}return o}parseGenerator(e,t){let n=this.input,s=e.offset,i=e.offset+e.size,a,o,r=[];for(;s<i;){if(a=n[s++]|n[s++]<<8,o=this.GeneratorEnumeratorTable[a],o===void 0){r.push({type:o,value:{code:a,amount:n[s]|n[s+1]<<8<<16>>16,lo:n[s++],hi:n[s++]}});continue}switch(o){case"keynum":case"keyRange":case"velRange":case"velocity":r.push({type:o,value:{lo:n[s++],hi:n[s++]}});break;default:r.push({type:o,value:{amount:n[s++]|n[s++]<<8<<16>>16}});break}}return r}createInstrument(){let e=this.instrument,t=this.instrumentZone,n=[],s,i,a,o,r,l,h,u,c;for(l=0,h=e.length;l<h;++l){for(s=e[l].instrumentBagIndex,i=e[l+1]?e[l+1].instrumentBagIndex:t.length,a=[],u=s,c=i;u<c;++u)o=this.createInstrumentGenerator_(t,u),r=this.createInstrumentModulator_(t,u),a.push({generator:o.generator,generatorSequence:o.generatorInfo,modulator:r.modulator,modulatorSequence:r.modulatorInfo});n.push({name:e[l].instrumentName,info:a})}return n}createPreset(){let e=this.presetHeader,t=this.presetZone,n=[],s,i,a,o,r,l,h,u,c,y;for(h=0,u=e.length;h<u;++h){for(s=e[h].presetBagIndex,i=e[h+1]?e[h+1].presetBagIndex:t.length,a=[],c=s,y=i;c<y;++c)r=this.createPresetGenerator_(t,c),l=this.createPresetModulator_(t,c),a.push({generator:r.generator,generatorSequence:r.generatorInfo,modulator:l.modulator,modulatorSequence:l.modulatorInfo}),o=r.generator.instrument!==void 0?r.generator.instrument.amount:l.modulator.instrument!==void 0?l.modulator.instrument.amount:null;n.push({name:e[h].presetName,info:a,header:e[h],instrument:o})}return n}createInstrumentGenerator_(e,t){let n=this.createBagModGen_(e,e[t].instrumentGeneratorIndex,e[t+1]?e[t+1].instrumentGeneratorIndex:this.instrumentZoneGenerator.length,this.instrumentZoneGenerator);return{generator:n.modgen,generatorInfo:n.modgenInfo}}createInstrumentModulator_(e,t){let n=this.createBagModGen_(e,e[t].presetModulatorIndex,e[t+1]?e[t+1].instrumentModulatorIndex:this.instrumentZoneModulator.length,this.instrumentZoneModulator);return{modulator:n.modgen,modulatorInfo:n.modgenInfo}}createPresetGenerator_(e,t){let n=this.createBagModGen_(e,e[t].presetGeneratorIndex,e[t+1]?e[t+1].presetGeneratorIndex:this.presetZoneGenerator.length,this.presetZoneGenerator);return{generator:n.modgen,generatorInfo:n.modgenInfo}}createPresetModulator_(e,t){let n=this.createBagModGen_(e,e[t].presetModulatorIndex,e[t+1]?e[t+1].presetModulatorIndex:this.presetZoneModulator.length,this.presetZoneModulator);return{modulator:n.modgen,modulatorInfo:n.modgenInfo}}createBagModGen_(e,t,n,s){let i=[],a={unknown:[],keyRange:{hi:127,lo:0}},o,r,l;for(r=t,l=n;r<l;++r)o=s[r],i.push(o),o.type==="unknown"?a.unknown.push(o.value):a[o.type]=o.value;return{modgen:a,modgenInfo:i}}},O=E;var x=class{constructor(e,t,n,s){this.customBuffer=s,this.ctx=e,this.destination=t,this.instrument=n,this.channel=n.channel,this.key=n.key,this.velocity=n.velocity,this.buffer=s||n.sample,this.playbackRate=n.basePlaybackRate,this.loopStart=n.loopStart,this.loopEnd=n.loopEnd,this.sampleRate=n.sampleRate,this.volume=n.volume,this.panpot=n.panpot,this.pitchBend=n.pitchBend,this.pitchBendSensitivity=n.pitchBendSensitivity,this.modEnvToPitch=n.modEnvToPitch,this.expression=n.expression,this.cutOffFrequency=n.cutOffFrequency,this.hermonicContent=n.hermonicContent,this.startTime=e.currentTime,this.computedPlaybackRate=this.playbackRate|0,this.noteOffState=!1,this.audioBuffer=null,this.bufferSource=e.createBufferSource(),this.outputGainNode=e.createGain(),this.expressionGainNode=e.createGain(),this.filter=e.createBiquadFilter(),this.modulator=e.createBiquadFilter()}noteOn(){let e=this.ctx,t=this.instrument,n=this.ctx.currentTime||0,s=n+t.volDelay,i=n+t.modDelay,a=s+t.volAttack,o=s+t.modAttack,r=a+t.volHold,l=o+t.modHold,h=r+t.volDecay,u=l+t.modDecay,c=t.loopStart/this.sampleRate,y=t.loopEnd/this.sampleRate,b=t.start/this.sampleRate,f=t.pan!==void 0?t.pan:this.panpot,p=this.buffer.subarray(0,this.buffer.length+t.end);this.audioBuffer=e.createBuffer(1,p.length,this.sampleRate);let{audioBuffer:d}=this;d.getChannelData(0).set(p);let m=this.bufferSource;m.buffer=d,m.loop=t.sampleModes|0||0,m.loopStart=c,m.loopEnd=y,this.updatePitchBend(this.pitchBend);let w=this.outputGainNode;this.expressionGainNode.gain.value=this.expression/127;let v=this.volume*(this.velocity/127)*(1-t.initialAttenuation/1e3);v<0&&(v=0);let g=w.gain;g.setValueAtTime(0,n),g.setValueAtTime(0,s),g.setTargetAtTime(v,s,t.volAttack),g.setValueAtTime(v,r),g.linearRampToValueAtTime(v*(1-t.volSustain),h);let S=this.amountToFreq(t.initialFilterFc),G=this.amountToFreq(t.initialFilterFc+t.modEnvToFilterFc),I=S+(G-S)*(1-t.modSustain),M=this.modulator;M.Q.setValueAtTime(10**(t.initialFilterQ/200),n),M.frequency.value=S,M.type="lowpass",M.frequency.setTargetAtTime(S/127,this.ctx.currentTime,.5),M.frequency.setValueAtTime(S,n),M.frequency.setValueAtTime(S,i),M.frequency.setTargetAtTime(G,i,parseFloat(String(t.modAttack+1))),M.frequency.setValueAtTime(G,l),M.frequency.linearRampToValueAtTime(I,u),m.connect(M),M.connect(this.expressionGainNode),this.expressionGainNode.connect(w),t.mute||this.connect(),m.start(0,b)}amountToFreq(e){return 2**((e-6900)/1200)*440}noteOff(){this.noteOffState=!0}isNoteOff(){return this.noteOffState}release(){let e=this.instrument,t=this.bufferSource,n=this.outputGainNode,s=this.ctx.currentTime,i=e.releaseTime-64,a=e.volRelease*n.gain.value,o=s+a*(1+i/(i<0?64:63)),r=this.modulator,l=this.amountToFreq(e.initialFilterFc),h=this.amountToFreq(e.initialFilterFc+e.modEnvToFilterFc),u=s+e.modRelease*(l===h?1:(r.frequency.value-l)/(h-l));if(this.audioBuffer)switch(e.sampleModes){case 0:t.loop=!1,t.disconnect(),t.buffer=null;break;case 1:n.gain.cancelScheduledValues(0),n.gain.setValueAtTime(n.gain.value,s),n.gain.linearRampToValueAtTime(0,o),r.frequency.cancelScheduledValues(0),r.frequency.setValueAtTime(r.frequency.value,s),r.frequency.linearRampToValueAtTime(l,u),t.playbackRate.cancelScheduledValues(0),t.playbackRate.setValueAtTime(t.playbackRate.value,s),t.playbackRate.linearRampToValueAtTime(this.computedPlaybackRate,u),t.stop(o);break;case 2:console.error("detect unused sampleModes");break;case 3:n.gain.cancelScheduledValues(0),n.gain.setValueAtTime(n.gain.value,s),n.gain.linearRampToValueAtTime(0,o),r.frequency.cancelScheduledValues(0),r.frequency.setValueAtTime(r.frequency.value,s),r.frequency.linearRampToValueAtTime(l,u),t.playbackRate.cancelScheduledValues(0),t.playbackRate.setValueAtTime(t.playbackRate.value,s),t.playbackRate.linearRampToValueAtTime(this.computedPlaybackRate,u);break;default:t.loop=!1;break}}connect(){this.outputGainNode.connect(this.destination)}disconnect(){this.outputGainNode.disconnect(0)}schedulePlaybackRate(){let e=this.bufferSource.playbackRate,t=this.computedPlaybackRate,n=this.startTime,s=this.instrument,i=n+s.modAttack,a=i+s.modDecay,o=t*Math.pow(2,1/12)**(this.modEnvToPitch*this.instrument.scaleTuning);e.cancelScheduledValues(0),e.setValueAtTime(t,n),e.linearRampToValueAtTime(o,i),e.linearRampToValueAtTime(t+(o-t)*(1-s.modSustain),a)}updateExpression(e){this.expressionGainNode.gain.value=(this.expression=e)/127}updatePitchBend(e){this.computedPlaybackRate=this.playbackRate*Math.pow(2,1/12)**(e/(e<0?8192:8191)*this.pitchBendSensitivity*this.instrument.scaleTuning),this.schedulePlaybackRate()}},F=x;var C=class{constructor(e,t){let n,s;for(this.input=e,this.parser=null,this.bank=0,this.mode="",this.bankSet=[],this.bufferSize=2048,this.ctx=t||this.getAudioContext(),this.gainMaster=this.ctx.createGain(),this.bufSrc=this.ctx.createBufferSource(),this.channelInstrument=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],this.channelBank=[0,0,0,0,0,0,0,0,0,0,0,127,0,0,0,0],this.channelVolume=[127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127],this.channelPanpot=[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64],this.channelPitchBend=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],this.channelPitchBendSensitivity=[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],this.channelExpression=[127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127],this.channelAttack=[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64],this.channelDecay=[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64],this.channelSustin=[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64],this.channelRelease=[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64],this.channelHold=[!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1],this.channelHarmonicContent=[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64],this.channelCutOffFrequency=[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64],this.isGS=!1,this.isXG=!1,this.programSet={},this.channelMute=[!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1],this.currentNoteOn=[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],this.baseVolume=1/65535,this.masterVolume=16384,this.percussionPart=[!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!1,!1,!1,!1,!1,!1],this.percussionVolume=new Array(128),n=0,s=this.percussionVolume.length;n<s;++n)this.percussionVolume[n]=127;this.programSet=[]}changeCtx(e){this.ctx=e,this.gainMaster=this.ctx.createGain(),this.bufSrc=this.ctx.createBufferSource(),this.init(this.mode,!0)}getAudioContext(){let e=new(window.AudioContext||window.webkitAudioContext);return e.createGain=e.createGain||e.createGainNode,e}init(e="GM",t){this.gainMaster.disconnect();let n;for(t||(this.parser=new O(this.input,{sampleRate:this.ctx.sampleRate}),this.bankSet=this.createAllInstruments()),this.isXG=!1,this.isGS=!1,this.mode=e,e==="XG"?this.isXG=!0:e==="GS"&&(this.isGS=!0),n=0;n<16;++n)this.programChange(n,0),this.volumeChange(n,100),this.panpotChange(n,64),this.pitchBend(n,0,64),this.pitchBendSensitivity(n,2),this.channelHold[n]=!1,this.channelExpression[n]=127,this.channelBank[n]=n===9?127:0,this.attackTime(n,64),this.decayTime(n,64),this.sustinTime(n,64),this.releaseTime(n,64),this.harmonicContent(n,64),this.cutOffFrequency(n,64);for(this.setPercussionPart(9,!0),n=0;n<128;++n)this.percussionVolume[n]=127;this.gainMaster.connect(this.ctx.destination),this.input=null}close(){this.ctx.close()}refreshInstruments(e){this.input=e,this.parser=new O(e),this.bankSet=this.createAllInstruments(),this.input=null}createAllInstruments(){let{parser:e}=this;e.parse();let t=e.createPreset(),n=e.createInstrument(),s=[],i=[];for(let a=0;a<t.length;++a){let o=t[a],r=o.header.preset,l=o.header.bank,h=o.name.replace(/\0*$/,""),u={},c={};c=o.info[0].generator||{};let b=c.instrument?c.instrument.amount:null;if(b!==null){let d=n[b];d&&d.info&&d.info.length>0&&(u=d.info[0].generator||{})}let f={...u,...c};s[l]===void 0&&(s[l]=[]);let p=s[l];for(let d=Math.max(Math.min(1,o.info.length-1),0);d<o.info.length;d++){let m=o.info[d].generator||{},w=m.instrument?m.instrument.amount:null;if(w!==null){let v=n[w];if(v&&v.info)for(let g of v.info){let S=g.generator||{},G={...f,...c,...u,...v.info[0].generator,...m,...S};G.keyRange&&(p[r]||(p[r]={},p[r].name=h),this.createNoteInfo(e,{generator:G},p[r]))}}}i[l]||(i[l]={}),i[l][r]||=h}return this.programSet=i,s}createNoteInfo(e,t,n){let s=t.generator;if(s.keyRange===void 0||s.sampleID===void 0)return;let i=this.getModGenAmount(s,"delayVolEnv",-12e3),a=this.getModGenAmount(s,"attackVolEnv",-12e3),o=this.getModGenAmount(s,"holdVolEnv",-12e3),r=this.getModGenAmount(s,"decayVolEnv",-12e3),l=this.getModGenAmount(s,"sustainVolEnv"),h=this.getModGenAmount(s,"releaseVolEnv",-12e3),u=this.getModGenAmount(s,"delayModEnv",-12e3),c=this.getModGenAmount(s,"attackModEnv",-12e3),y=this.getModGenAmount(s,"holdModEnv",-12e3),b=this.getModGenAmount(s,"decayModEnv",-12e3),f=this.getModGenAmount(s,"sustainModEnv"),p=this.getModGenAmount(s,"releaseModEnv",-12e3),d=this.getModGenAmount(s,"scaleTuning",100)/100,A=this.getModGenAmount(s,"freqVibLFO"),m=this.getModGenAmount(s,"pan"),w=this.getModGenAmount(s,"coarseTune")+this.getModGenAmount(s,"fineTune")/100,v=s.velRange||{doNotPrefer:!0,lo:0,hi:127};for(let g=s.keyRange.lo,S=s.keyRange.hi;g<=S;++g){n[g]||(n[g]=[]);let G=this.getModGenAmount(s,"sampleID"),I=e.sampleHeader[G];n[g].push({velRange:v,sample:e.sample[G],sampleRate:I.sampleRate,sampleModes:this.getModGenAmount(s,"sampleModes"),basePlaybackRate:1.0594630943592953**((g-this.getModGenAmount(s,"overridingRootKey",I.originalPitch)+w+I.pitchCorrection/100)*d),modEnvToPitch:this.getModGenAmount(s,"modEnvToPitch")/100,scaleTuning:d,start:this.getModGenAmount(s,"startAddrsCoarseOffset")*32768+this.getModGenAmount(s,"startAddrsOffset"),end:this.getModGenAmount(s,"endAddrsCoarseOffset")*32768+this.getModGenAmount(s,"endAddrsOffset"),loopStart:I.startLoop+this.getModGenAmount(s,"startloopAddrsCoarseOffset")*32768+this.getModGenAmount(s,"startloopAddrsOffset"),loopEnd:I.endLoop+this.getModGenAmount(s,"endloopAddrsCoarseOffset")*32768+this.getModGenAmount(s,"endloopAddrsOffset"),volDelay:2**(i/1200),volAttack:2**(a/1200),volHold:2**(o/1200)*2**((60-g)*this.getModGenAmount(s,"keynumToVolEnvHold")/1200),volDecay:2**(r/1200)*2**((60-g)*this.getModGenAmount(s,"keynumToVolEnvDecay")/1200),volSustain:l/1e3,volRelease:2**(h/1200),modDelay:2**(u/1200),modAttack:2**(c/1200),modHold:2**(y/1200)*2**((60-g)*this.getModGenAmount(s,"keynumToModEnvHold")/1200),modDecay:2**(b/1200)*2**((60-g)*this.getModGenAmount(s,"keynumToModEnvDecay")/1200),modSustain:f/1e3,modRelease:2**(p/1200),initialFilterFc:this.getModGenAmount(s,"initialFilterFc",13500),modEnvToFilterFc:this.getModGenAmount(s,"modEnvToFilterFc"),initialFilterQ:this.getModGenAmount(s,"initialFilterQ"),initialAttenuation:this.getModGenAmount(s,"initialAttenuation"),freqVibLFO:A?2**(A/1200)*8.176:void 0,pan:m?m/1200:void 0})}}getModGenAmount(e,t,n=null){return e[t]?e[t].amount:n}start(){this.connect(),this.bufSrc.start(0),this.setMasterVolume(16383)}setMasterVolume(e){this.masterVolume=e,this.gainMaster.gain.value=this.baseVolume*(e/16384)}connect(){this.bufSrc.connect(this.gainMaster)}disconnect(){this.bufSrc.disconnect(this.gainMaster),this.bufSrc.buffer=null}noteOn(e,t,n,s){let i=this.channelBank[e],a=typeof this.bankSet[i]=="object"?this.bankSet[i]:this.bankSet[0],o;typeof a[this.channelInstrument[e]]=="object"?o=a[this.channelInstrument[e]]:this.percussionPart[e]===!0?o=this.bankSet[this.isXG?127:128][0]:o=this.bankSet[0][this.channelInstrument[e]];let r=Object.keys(o).map(f=>parseInt(f)).sort((f,p)=>Math.abs(f-t)-Math.abs(p-t)),l=o[t]||o[r[0]],h=null,u=[];if(l){l.sort((f,p)=>Math.abs((f.velRange?.lo+f.velRange?.hi)/2)-n-Math.abs((p.velRange?.lo+p.velRange?.hi)/2-n));for(let f=0,p=l.length;f<p;++f){let d=l[f];if(n>=d.velRange.lo&&n<=d.velRange.hi&&(h=d,!d.velRange.doNotPrefer&&(u.push({sample:d.sample,pan:d.pan||0}),s===-1)))break}h||(h=l[0])}if(u.length===0&&u.push({sample:h.sample,pan:h.pan||0}),h===null){console.warn("instrument not found: bank=%s instrument=%s channel=%s key=%s velocity=%s",i,this.channelInstrument[e],e,t,n);return}let c=s===-1?null:new Float32Array(Math.max(...u.map(f=>f.sample.length)));if(s!==-1){let f=new Float32Array(c.length);u.forEach(p=>{f.set(p.sample);let d=(p.pan+1)/2,A=s===0?Math.cos(d*Math.PI/2):Math.sin(d*Math.PI/2);for(let m=0;m<f.length;m++)c[m]+=f[m]*A})}let y=this.channelPanpot[e]===0?Math.random()*127|0:this.channelPanpot[e]-64;y/=y<0?64:63,h.channel=e,h.key=t,h.velocity=n,h.panpot=y,h.volume=this.channelVolume[e]/127,h.pitchBend=this.channelPitchBend[e]-8192,h.expression=this.channelExpression[e],h.pitchBendSensitivity=Math.round(this.channelPitchBendSensitivity[e]),h.mute=this.channelMute[e],h.releaseTime=this.channelRelease[e],h.cutOffFrequency=this.cutOffFrequency[e],h.harmonicContent=this.harmonicContent[e],i>125&&((t===42||t===44)&&this.noteOff(e,46),t===80&&this.noteOff(e,81),o.volume*=this.percussionVolume[t]/127);let b=new F(this.ctx,this.gainMaster,h,c);b.noteOn(),this.currentNoteOn[e].push(b)}noteOff(e,t){let n,s,i=this.currentNoteOn[e],a,o=this.channelHold[e];for(n=0,s=i.length;n<s;++n)a=i[n],a.key===t&&(a.noteOff(),o||(a.release(),i.splice(n,1),--n,--s))}hold(e,t){let n=this.currentNoteOn[e];this.channelHold[e]=!(t<64);let s=this.channelHold[e],i,a,o;if(!s)for(a=0,o=n.length;a<o;++a)i=n[a],i.isNoteOff()&&(i.release(),n.splice(a,1),--a,--o)}bankSelectMsb(e,t){this.isXG?(this.channelBank[e]=0,t===64?(this.channelBank[e]=125,this.percussionPart[e]=!0):(t===126||t===127)&&(this.channelBank[e]=t,this.percussionPart[e]=!0)):this.isGS&&(this.channelBank[e]=e===9?128:t,this.percussionPart[e]=t===128)}bankSelectLsb(e,t){!this.isXG||this.percussionPart[e]===!0||(this.percussionPart[e]=t>=125,this.channelBank[e]=t)}programChange(e,t){this.channelInstrument[e]=t,this.bankChange(e,this.channelBank[e])}bankChange(e,t){typeof this.bankSet[t]=="object"?this.channelBank[e]=t:this.percussionPart[e]?this.channelBank[e]=this.isXG?127:128:this.channelBank[e]=0}volumeChange(e,t){this.channelVolume[e]=t}expression(e,t){let n,s,i=this.currentNoteOn[e];for(n=0,s=i.length;n<s;++n)i[n].updateExpression(t);this.channelExpression[e]=t}panpotChange(e,t){this.channelPanpot[e]=t}pitchBend(e,t,n){let s=t&127|(n&127)<<7,i,a,o=this.currentNoteOn[e],r=s-8192;for(i=0,a=o.length;i<a;++i)o[i].updatePitchBend(r);this.channelPitchBend[e]=s}pitchBendSensitivity(e,t){this.channelPitchBendSensitivity[e]=t}attackTime(e,t){this.channelAttack[e]=t}decayTime(e,t){this.channelDecay[e]=t}sustinTime(e,t){this.channelSustin[e]=t}releaseTime(e,t){this.channelRelease[e]=t}harmonicContent(e,t){this.channelHarmonicContent[e]=t}cutOffFrequency(e,t){this.channelCutOffFrequency[e]=t}getPitchBendSensitivity(e){return this.channelPitchBendSensitivity[e]}drumInstrumentLevel(e,t){this.percussionVolume[e]=t}allNoteOff(e){let t=this.currentNoteOn[e];for(this.hold(e,0);t.length>0;)this.noteOff(e,t[0].key)}allSoundOff(e){let t=this.currentNoteOn[e],n;for(;t.length>0;)n=t.shift(),this.noteOff(e,n.key),n.release(),n.disconnect();this.hold(e,0)}resetAllControl(e){this.allNoteOff(e),this.expression(e,127),this.pitchBend(e,0,64)}mute(e,t){let n=this.currentNoteOn[e],s,i;if(this.channelMute[e]=t,t)for(s=0,i=n.length;s<i;++s)n[s].disconnect();else for(s=0,i=n.length;s<i;++s)n[s].connect()}setPercussionPart(e,t){this.isXG?this.channelBank[e]=127:this.channelBank[e]=128,this.percussionPart[e]=t}},P=C;function V(k){return new Promise((e,t)=>{let n=new FileReader;n.onload=()=>n.result instanceof ArrayBuffer?e(n.result):t(new TypeError("File reader did not yield ArrayBuffer.")),n.onerror=s=>t(s),n.readAsArrayBuffer(k)})}async function N(k){let e=await fetch(k);if(!e.ok)throw new Error("Did not get an OK response when fetching resource.");return await e.arrayBuffer()}var q=k=>new Promise(e=>{let t=setInterval(()=>{k!==void 0&&(clearInterval(t),e())},16)});globalThis.SoundFont=class{constructor(){this.synth=void 0,this._channel=0,this._bankIndex=0,this._programIndex=0}set channel(e){this._channel=e}async loadSoundFontFromFile(e){let t=await V(e);this.bootSynth(t)}async loadSoundFontFromURL(e){let t=await N(e);this.bootSynth(t)}set bank(e){this._bankIndex=e,this.synth.bankChange(this._channel,e)}get banks(){return Object.keys(this.synth.programSet).map(e=>({id:e,name:("000"+parseInt(e,10)).slice(-3)}))}set program(e){this._programIndex=e,this.synth.programChange(this._channel,e)}get programs(){let{programSet:e}=this.synth;return Object.keys(e[this._bankIndex]).map(t=>({id:t,name:("000"+(parseInt(t,10)+1)).slice(-3)+":"+e[this._bankIndex][t]}))}async bootSynth(e){let t=new Uint8Array(e);this.synth?this.synth.refreshInstruments(t):(this.synth=new P(t),this.synth.init(),this.synth.start(),await q(this.synth.programSet))}noteOn(e,t=127,n,s){this.synth.noteOn(n||this._channel,e,t,s??-1)}noteOff(e,t=127,n){this.synth.noteOff(n||this._channel,e,t)}};})();
//# sourceMappingURL=sf2-player.js.map
